pico-8 cartridge // http://www.pico-8.com
version 27
__lua__
function _init()
 pagewait=240
 titlewait=480
 init_splash(2)
end
 
function init_game()

 splashwait = 600
 roidload = 0
 score = 0
 mans = 3
 friction = .98
 level = 1
 shottime = 40
 dead = false
 game_over = false
 overpause = nil
 splosions = {}  
 levelwait = 0
 newman = 1000
 maxspeed = 3
 phases=3
 phasetimer=0
 init_roids()
 init_ship() 
 music(-1)
 covid = null
 covidtimer = null
 covidshot = null
 
 shots = {
  {
    time=0
  },
  {
    time=0
  },
  {
    time=0
  },
  {
    time=0
  }
 }
  
 -- temporary
 --init_covid()
end

function _draw()
 cls()
 rectfill(0,0,128,128,1)
 foreach(roids, drawobj, roidvec, 13)
	foreach(splosions, draw_splosion)

 if (not splash) then
 
	 for i=1,4 do
	  if shots[i].time > 0 then
	   pset(shots[i].x, shots[i].y, shots[i].clr == 99 and rnd(16) or shots[i].clr)
	  end
	 end

  if (covidshot and covidshot.active) then
			drawvec(covidshot.x,
			        covidshot.y,
			        rnd(360),
			        covidshotvec,
			        rnd(16))
  end
  	   
	 if (not dead) then
	  if (phasetimer > 0) then
			 drawvec(ship.x, ship.y, ship.dir,
			  shipvec, rnd(16))
	  else  
			 drawvec(ship.x, ship.y, ship.dir,
			  shipvec, ship.clr)
	  end
		 if btn(2) then
		  sfx(0)
		  drawvec(ship.x, ship.y, ship.dir,
		  thrustvec, phasetimer > 0 and rnd(16) or 10)
		  drawvec(ship.x, ship.y, ship.dir,
		  thrustvec2, phasetimer > 0 and rnd(16) or 8)
		 end
	
		 -- music
		 if (musictimer == 0 and roidload > 0) then
		  -- play sound
		  sfx(5+musictoggle)
		  musictoggle = musictoggle == 0 and 1 or 0
		  musictimer = roidload + 5
		 else
		  musictimer -= 1
		 end
	  
	 end
	
  if (covid) draw_covid()
  
	 if (game_over) then
	  center("game over", rnd(16))
	  if (overpause < splashwait - 90) print ("❎/x to restart", 33, 80, 13)
	 end
	  
	 --print("score:", 1, 1, 5);
	 print(score, 1, 1, 11)
	 drawvec(97.5, 3, 270,
	  shipvec, 13, .7)
	 print(":", 100, 1, 5)
	 print(phases, 103, 1, 11)
	 drawvec(114.5, 3, 270,
	  shipvec, ship.clr, .7)
	 print(":", 117, 1, 5)
	 print(mans, 120, 1, 11)
	 --print("🅾️/z:shoot    ❎/x:phase shift", 5, 122, 5)
	 
 else
  showsplash(splashpage)
 end
 
	if (levelwait and levelwait > 0) center("wave "..level, rnd(16))

end

function draw_splosion(s)
 for i=1,#(s.particles) do
  pset(
   s.x + (cos(s.particles[i].dir/360) * s.particles[i].speed * s.time * s.mag),
   s.y - (sin(s.particles[i].dir/360) * s.particles[i].speed * s.time * s.mag),
   s.time < (s.maxtime / 2) and s.clr or rnd(16)
  )
 end
 s.time += 1
 if (s.time == s.maxtime) del(splosions, s)
end


function _update()
 
 foreach(roids, move)

 if (covidshot) then
  if covidshot.t == 0 then
   covidshot = null
  else
   if (covidshot.active) then
	   covidshot.x = (covidshot.x + covidshot.xvel)%128
	   covidshot.y = (covidshot.y + covidshot.yvel)%128
	  end
   covidshot.t -= 1
  end
 end
 
 if (covid) then
  move_covid()
  if (covid and not covidshot) then
   covidshot = {}
   coviddir=rnd(360)
   covidvels=get_vels(coviddir, 1)
   covidshot.t=30
   covidshot.x=covid.x + covidvels[1]
   covidshot.y=covid.y + covidvels[2]
   covidshot.xvel=covidvels[1]*2
   covidshot.yvel=covidvels[2]*2
   covidshot.active = true
   sfx(10)
  end
 else
  if (not dead and level and level > 1 and maxload and 
   (roidload > maxload / 2)) then
   if (not covidtimer) then
    covidtimer = flr(rnd(300))+150
   end
  end
 end

 if (covidtimer) then
  if (covidtimer == 0) then
   if (not dead) then
    init_covid()
   else
    covidtimer = null
   end
  else
   covidtimer -= 1
  end
 end
 
 
 if (not splash) then
	
	 if (not game_over and dead) then
	  if (deadwait > 0) then
	   deadwait -= 1
	  else
	   if is_safe() then
	    dead = false
	    init_ship()
	   end
	  end
	 end
	 
	 if (levelwait > 0) then
	  levelwait -= 1
	  print("wave "..level, 55,62, rnd(16))
	  if (levelwait == 0) init_roids()
	 end
 
 
	 if (not dead) then
--	  if (phasetimer == 0) then
			 if btn(2) then
			  ship.xvel+=cos(ship.dir/360)/ship.thrustdiv
			  ship.yvel-=sin(ship.dir/360)/ship.thrustdiv
			  if (ship.xvel > maxspeed) ship.xvel = maxspeed
			  if (ship.yvel > maxspeed) ship.yvel = maxspeed
			  if (ship.xvel < -maxspeed) ship.xvel = -maxspeed
			  if (ship.yvel < -maxspeed) ship.yvel = -maxspeed
			 else
			  ship.xvel *= friction
			  ship.yvel *= friction
			 end
			 if btn(1) then
			  ship.dir = (ship.dir + ship.turnspeed)%360
			 end
			 if btn(0) then
			  ship.dir = (ship.dir - ship.turnspeed)%360
			 end
			 
			 if btnp(4) then
			  for i=1,4 do
			   if shots[i].time == 0 then
			    sfx(1) -- shoot
			    shots[i].time = shottime
			    shots[i].x = ship.x + (cos(ship.dir/360)*5)
			    shots[i].y = ship.y - (sin(ship.dir/360)*5)
			    shots[i].clr = phasetimer > 0 and 99 or 11
			    shots[i].xvel = (
			     ship.xvel + 
			     cos(ship.dir/360)*1.5
			    )
			    shots[i].yvel = (
			     ship.yvel -
			     sin(ship.dir/360)*1.5
			    )
			    break
			   end
			  end
			 end
			 
			 if (btnp(5) and phasetimer == 0 and phases > 0) then
			  sfx(4)
			  phasetimer = 60
			  phases -= 1
			 end
			 
--		 else
		  if (phasetimer > 0) phasetimer -= 1
--		 end
		 
		 move(ship)
	  
	  if (phasetimer == 0) then
	  end
	 end

  roidcol = roidcollision(ship, roids)
	 if (not dead and roidcol) then
   dead = true
   add_splosion(ship.x, ship.y, 200, 1, ship.clr, 120)
   sfx(2)
	  if mans == 0 then
		  game_over = true
		  overpause = splashwait
		 end
		 deadwait=150	 
	 end

	 for i = 1,4 do
	  shotcollision(shots[i], roids)
	  if (shots[i].time > 1) move(shots[i])
	 end
	 
	 foreach(shots, countdown)
	
	 if (game_over) then
	  if (overpause < splashwait - 90) then
	   if (overpause == 0) then
	    init_splash(2)
	   else
		   if (btnp(5)) then
	 	   init_game()
	 	  else
   	  overpause -= 1
   	 end
	 	 end
 	 else
 	  overpause -= 1
 	 end
	 end
		 
 else
  if (btnp(5)) then
   splash=false
   init_game()
  end
 end
   
 foreach(roids, spin)
 
end

function is_safe()
 if (covid) return false;
 for i=1,#roids do
  if (
   78 > roids[i].x-roids[i].w and
   50 < roids[i].x+roids[i].w and
   78 > roids[i].y-roids[i].w and
   50 < roids[i].y+roids[i].w
  ) then
   return false
  end
 end
 return true
end

function roidcollision(o, t)

 if (not dead and phasetimer == 0) then
	 if (covid and (
	  o.x + o.w > covid.x-covid.w and
	  o.x - o.w < covid.x+covid.w and
	  o.y + o.w > covid.y-covid.w and
	  o.y - o.w < covid.y+covid.w
	 )) then
	  kill_covid()
	  return true
	 end
	 if (covidshot and covidshot.active and
	  covidshot.x > o.x-o.w and
	  covidshot.x < o.x+o.w and
	  covidshot.y > o.y-o.w and
	  covidshot.y < o.y+o.w
	 ) then
	  covidshot.active = false
	  return true
	 end
 end
 
  
 for i=1,#t do
  if (covidshot and covidshot.active and
   covidshot.x > t[i].x-t[i].w and
   covidshot.x < t[i].x+t[i].w and
   covidshot.y > t[i].y-t[i].w and
   covidshot.y < t[i].y+t[i].w
  ) then
   if(t[i].spec) sfx(11)
   kill_roid(t[i], true)
   covidshot.active = false
   return false
  end
    
  if (not dead and phasetimer == 0 and
   o.x + o.w > t[i].x-t[i].w and
   o.x - o.w < t[i].x+t[i].w and
   o.y + o.w > t[i].y-t[i].w and
   o.y - o.w < t[i].y+t[i].w
  ) then
   if t[i].spec then
    roidload -= (t[i].size * t[i].size)
    del(roids, t[i])
    phases += 1
    addscore(250)
    phasetimer=15
    sfx(7)
    return false
   else
    kill_roid(t[i])
    return true
   end
  end
	end
 return false
end

function shotcollision(shot, targets)
 if (covid) then
  if (
   shot.time>0 and
   shot.x > covid.x - covid.w and
   shot.x < covid.x + covid.w and
   shot.y > covid.y - covid.w and
   shot.y < covid.y + covid.w
  ) then
   shot.time=0
   kill_covid()
  end
 end
 for i=1,#targets do
  if (
   shot.time>0 and
   shot.x > targets[i].x-targets[i].w and
   shot.x < targets[i].x+targets[i].w and
   shot.y > targets[i].y-targets[i].w and
   shot.y < targets[i].y+targets[i].w
  ) then
   shot.time=0
   if(targets[i].spec) sfx(11)
   kill_roid(targets[i])
  end
 end
 if (#targets==0) then
  if (levelwait == 0) then
	  level += 1
	  levelwait = 120
	 end
 end
end

function kill_roid(roid, noscore)
 roidload -= (roid.size * roid.size)
 if (not noscore) addscore(roid.score)
 add_splosion(roid.x, roid.y, 30, 1, roid.clr, 30)
 sfx(2)
 del(roids, roid)   
 if (roid.size > 1) then
  for i=1,flr(rnd(2))+2 do
   spec = roid.size == 2 and flr(rnd(50)) == 0
   add_roid(
    roid.size-1, 
    roid.x, 
    roid.y,
    roid.clr,
    spec)
   if (spec) sfx(8)
  end
 end
 
end

function addscore(s)
 befo=flr(score / newman)
 score += s
 if flr(score / newman) > befo then
  mans += 1
  phases += 1
  sfx(3)
 end
end
 
function add_splosion(x, y, particles, mag, clr, maxtime)
 splosion={}
 splosion.x=x
 splosion.y=y
 splosion.time=5
 splosion.mag=mag
 splosion.clr=clr
 splosion.maxtime=maxtime
 
 splosion.particles={}
 
 for i=1,particles do
  particle={}
  particle.dir=rnd(360)
  particle.speed=rnd(1)
  add(splosion.particles,particle)
 end
 add(splosions, splosion)
end

function countdown(obj)
 if (obj.time > 0) obj.time -= 1
end

function spin(obj)
 if obj.turndir == 1 then
  obj.dir = (obj.dir + obj.turnspeed) %360
 else
  obj.dir = (obj.dir - obj.turnspeed) %360
 end
end  

function move(obj)
 obj.x = (obj.x + obj.xvel) % 128
 obj.y = (obj.y + obj.yvel) % 128
end

function drawobj(obj)
 if (obj.spec) then
  drawvec(obj.x, obj.y, obj.dir, obj.vec, rnd(16))
 else  
  drawvec(obj.x, obj.y, obj.dir, obj.vec, obj.clr)
 end
end

function drawvec(x, y, dir, vec, clr, scale)
 if (not scale) scale = 1
 for i=1,#vec-1 do
	 line(
	  x+(cos((dir+vec[i][1])/360)*vec[i][2]*scale),
	  y-(sin((dir+vec[i][1])/360)*vec[i][2]*scale),
	  x+(cos((dir+vec[i+1][1])/360)*vec[i+1][2]*scale),
	  y-(sin((dir+vec[i+1][1])/360)*vec[i+1][2]*scale),
	  clr
	 )
 end
end
-->8
-- vecs

covidshotvec = {
 {0,1},
 {135, 1},
 {225, 1},
 {0, 1}
}

shipvec = {
 {0, 4},
 {140, 4},
 {220, 4},
 {0, 4}
}

medroidvec1 = {
 {0, 5},
 {30, 4},
 {70, 5},
 {120, 3},
 {140, 5},
 {170, 5},
 {230, 4},
 {250, 5},
 {290, 5},
 {320, 4},
 {340, 5},
 {0, 5}
}

medroidvec2 = {
 {0, 4},
 {20, 5},
 {50, 5},
 {90, 4},
 {140, 5},
 {190, 4},
 {200, 3},
 {210, 3},
 {220, 4},
 {240, 5},
 {280, 5},
 {340, 5},
 {0, 4}
}

medroidvecs = { medroidvec1, medroidvec2 }

smallroidvec = {
 {30, 3},
 {110, 2},
 {140, 2},
 {200, 2},
 {240, 2},
 {300, 3},
 {320, 3},
 {30, 3}
}

bigroidvec1 = {
 {30, 8},
 {110, 9},
 {140, 7},
 {160, 9},
 {190, 8},
 {230, 9},
 {250, 7},
 {280, 7},
 {300, 9},
 {320, 8},
 {30, 8}
}

bigroidvec2 = {
 {40, 8},
 {110, 9},
 {150, 9},
 {160, 6},
 {180, 6},
 {190, 9},
 {230, 9},
 {250, 8},
 {310, 9},
 {340, 8},
 {40, 8}
}

bigroidvecs = {bigroidvec1, bigroidvec2}

thrustvec = {
 {160, 4},
 {180, 6},
 {200, 4}
}

thrustvec2 = {
 {150, 4},
 {180, 8},
 {210, 4}
}
-->8
function init_roids(num)
 roids = {}
 for i=1,level+1 do
  side = flr(rnd(4))
  if (side == 0) add_roid(3, rnd(128), 0)
  if (side == 1) add_roid(3, 128, rnd(128))
  if (side == 2) add_roid(3, rnd(128), 128)
  if (side == 3) add_roid(3, 0, rnd(128))
 end   
 maxload = roidload
 musictimer = roidload + 3
 musictoggle = 0
end

function add_roid(_size, _x, _y, _clr, _spec)

 newroid = {
  spec = _spec,
  x = _x,
  y = _y,
  clr = _clr or flr(rnd(10))+6,
  dir = rnd(360),
	 turndir=flr(rnd(2)),
	 size = _size
 }

 if (_size == 3) then
  newroid.vec = bigroidvecs[flr(rnd(2))+1]
	 newroid.w=7.5
	 newroid.score=2
--	 newroid.xvel = rnd(1)-.5
--	 newroid.yvel = rnd(1)-.5
  vels = get_vels(rnd(360), rnd(.5) + .1)
  newroid.xvel=vels[1]
  newroid.yvel=vels[2]
	 newroid.turnspeed=rnd(5)
	end
 
 if (_size == 2) then
  newroid.vec = medroidvecs[flr(rnd(2))+1]
	 newroid.w=4
	 newroid.score=5
  vels = get_vels(rnd(360), rnd(.75) + .2)
  newroid.xvel=vels[1]
  newroid.yvel=vels[2]
	 newroid.turnspeed=rnd(8)
	end
	
	if (_size == 1) then
	 newroid.vec = smallroidvec
	 newroid.w=2.5
	 newroid.score=10
  vels = get_vels(rnd(360), rnd(1) + .3)
  newroid.xvel=vels[1]
  newroid.yvel=vels[2]
	 newroid.turnspeed=rnd(10)
	end
	
	add(roids, newroid)

 if (not splash) roidload += (_size * _size)
 
end

function get_vels(dir, speed)

 xvel = cos(dir/360) * speed
 yvel = sin(dir/360) * speed
 return {xvel, yvel}
 
end

function init_ship()
 ship = {
	 dir=270,
	 x=64.5,
	 y=64.5,
	 xvel=0,
	 yvel=0,
	 turnspeed=7,
	 thrustdiv=20,
	 clr=15,
	 w=3
 }
 mans -= 1
end
-->8
-- covid stuff

function kill_covid()
 add_splosion(covid.x, covid.y, 50, 1.5, 14, 50)
 addscore(100)
 sfx(2)
 music(-1)
 covid = null
 covidtimer = null
end

function move_covid()
 if (covid.targetdir != covid.dir) then
  if (covid.targetdir > covid.dir) covid.dir += 1
  if (covid.targetdir < covid.dir) covid.dir -= 1
 else
  if (covid.turncounter == 0) then
   covid.targetdir = covid.dir + (flr(rnd(180)) - 90)
   covid.turncounter = flr(rnd(60))
  else
   covid.turncounter -= 1
  end
 end
 vels = get_vels(covid.dir, .4)
 covid.x = covid.x + vels[1]
 covid.y = covid.y + vels[2]
 covid.t += 1
 if (
  covid.x < 0
  or covid.x > 128
  or covid.y < 0
  or covid.y > 128
 ) then
  covid=null
  covidtimer = null
  music(-1)
 end
end

function draw_covid()
 circfill(covid.x,covid.y,3,covidcols[flr(rnd(3)) + 1])
 pset(covid.x-1, covid.y-1, 0)
 pset(covid.x+1, covid.y-1, 0)
 for i=1,6 do
  d=i*60 + (covid.t*10)
  displacement = get_vels(d,4)
  circ
   (covid.x + displacement[1],
   covid.y + displacement[2],
   1,8)
 end
end

function init_covid()
 music(0)
 covidcols={2,13,14}
 -- pick a start spot/direction
 covid = {}
 
 i=flr(rnd(4))
 if (i == 0) then
  covid = {
   x = rnd(64) + 32,
   y = 0,
   dir = 270,
  }
 end

 if (i == 1) then
  covid = {
   x = rnd(64) + 32,
   y = 128,
   dir = 90,
  }
 end

 if (i == 2) then
  covid = {
   y = rnd(64) + 32,
   x = 0,
   dir = 0,
  }
 end

 if (i == 3) then
  covid = {
   y = rnd(64) + 32,
   x = 128,
   dir = 180,
  }
 end
 
 covidtimer = null
 covid.targetdir = covid.dir
 covid.turncounter = 0
 covid.w = 3
 covid.t = 0

 -- fake a shot to pause
 covidshot = {}
 covidshot.t=30
 covidshot.active = false

end
-->8
-- splash/text stuff
faket=0
function fakecovid(x, y, twitch)
 faket += 1
 covidcols={2,13,14}
 circfill(x,y,3,covidcols[flr(rnd(3)) + 1])
 pset(x-1, y-1, 0)
 pset(x+1, y-1, 0)
 for i=1,6 do
  d=i*60 + (faket*10)
  displacement = get_vels(d,4)
  circ
   (x +.5+ displacement[1],
   y + .5+displacement[2],
   1,8)
 end

end

function init_splash(p)
 splashpage = p
 pagetime = p == 2 and titlewait or pagewait
 splash = true
 game_over = false
 roids = {}
 splosions = {}
 for i=1,10 do
  add_roid(flr(rnd(3))+1, rnd(128), rnd(128))
 end
end

function showsplash()

 center("❎/x to start", 13, 122)
 print("0.97", 112, 122, 5)

 if (splashpage == 3) then
  if (pagetime == 0) then
   pagetime = pagewait
   scoroid1 = nil
   scoroid2 = nil
   scoroid3 = nil
   scoroid4 = nil
   init_splash(4)
  else
   top=15
   left = 5
   center("controls", 7, top-10)
   line(48,top-4, 78, top-4, 12)

   center("thrust", 10, top)
   print("⬆️", 60, top + 7, 7)
   print("⬅️ ➡️",54,top + 13,7)
   print("left", 37, top + 13, 10)
   print("right", 75, top + 13, 10)
   print("🅾️/z",43, top + 20, 7)
   print("❎/x",69, top + 20, 7)
   print("shoot", 41, top + 27, 10)
   print("phase", 67, top + 27, 10)
   drawvec(14.5, top+38, 270, shipvec, rnd(16))
   drawvec(111.5, top+38, 270, shipvec, rnd(16))
   center("phase to avoid danger!", 12, top+35)

   center("scoring", 7, top+46)
   line(50,top+52, 76, top+52, 12)

   print("2", left+18, top+71, 11)
   print("5", left+45, top+71, 11)
   print("10", left+66, top+71, 11)
   print("100", left+95, top+71, 11)

   print("collect", 32, top+80,7)
   print("for", 70, top+80,7)
   print("250", 84, top+80,11)
   center("and extra phase",7, top+86)

   center("extra ship+phase every 1000", 12, top+96)
     
   fakecovid(left+100, top+63)
       
   if (not scoroid1) then
			 scoroid1 = {
			  spec = false,
			  x = left+20,
			  y = top+61,
			  clr = 13,
			  dir = rnd(360),
				 turndir=flr(rnd(2)),
				 size = 3,
			  vec = bigroidvecs[flr(rnd(2))+1],
				 w=7.5,
				 score=2,
			  xvel=0,
			  yvel=0,
				 turnspeed=5
			 }
			 scoroid2 = {
			  spec = false,
			  x = left+47,
			  y = top+64,
			  clr = 13,
			  dir = rnd(360),
				 turndir=flr(rnd(2)),
				 size = 2,
			  vec = medroidvecs[flr(rnd(2))+1],
				 w=4,
				 score=5,
			  xvel=0,
			  yvel=0,
				 turnspeed=7.5
			 }
			 scoroid3 = {
			  spec = false,
			  x = left+70,
			  y = top+66,
			  clr = 13,
			  dir = rnd(360),
				 turndir=flr(rnd(2)),
				 size = 1,
			  vec = smallroidvec,
				 w=2.5,
				 score=10,
			  xvel=0,
			  yvel=0,
				 turnspeed=10
			 }
			 scoroid4 = {
			  spec = true,
			  x = 64,
			  y = top+82,
			  clr = 7,
			  dir = rnd(360),
				 turndir=flr(rnd(2)),
				 size = 1,
			  vec = smallroidvec,
				 w=2.5,
				 score=10,
			  xvel=0,
			  yvel=0,
				 turnspeed=10
			 }
    roids={}
    add(roids, scoroid1)
    add(roids, scoroid2)
    add(roids, scoroid3)
    add(roids, scoroid4)

   end   
   pagetime -= 1
  end
  
 end

 if (splashpage == 2) then
  if (pagetime == 0) then
   splashpage = 3
   pagetime = pagewait
  else
	  if (pagetime < (titlewait - 30)) center("jolt country games presents", 11, 20)
	  if (pagetime < (titlewait - 90)) center("a pinback game program", 9, 40) 
	  if (pagetime < (titlewait - 200)) and pagetime % 10 == 0 then
--	  print(#splosions, 10, 10, 10)
    if (pagetime > (titlewait - 260)) then
     sfx(2)
     add_splosion(rnd(100)+14, rnd(40)+60, flr(rnd(100))+100, flr(rnd(2))+1, rnd(15)+1, flr(rnd(100))+100)
    end
	  end
	  if (pagetime < (titlewait - 210)) fancyprint("pinneroids", 80, rnd(16))
	  pagetime -= 1
	 end
 end
 
 if (splashpage == 4) then
  if (pagetime == 0) then
   splashpage = 5
   pagetime = pagewait
  else
   top=10
	  center("pinneroids", rnd(16), top)
	  
	  center("(c) 2020 jolt country games", 11, top+10)

	  center("designed and programmed by", 12, top+20)
	  center("pinback", 9, top+27)

	  center('"asteroids" (c) atari, inc. by', 12, top+40)
	  center("lyle rains", 9, top+47)
	  center("ed logg", 9, top+54)
	  center("dominic walsh", 9, top+61)

	  center("pico-8 by", 12, top+74)
	  center("lexaloffle games", 9, top+81)
	  center("https://www.lexaloffle.com", 15, top+95)

	  pagetime -= 1
	 end
 end

 if (splashpage == 5) then
  if (pagetime == 0) then
   splashpage = 6
   pagetime = pagewait
  else
	  center("special thanks to", 11, 18)
	  center("clash", 10, 31)
	  center("beefheart", 10, 38)
	  center("noobspwn", 10, 45)
	  center("flack", 10, 52)
	  center("paul robinson", 10, 59)
	  center("ice cream jonsey", 10, 66)
	  center("everyone at jolt country", 10, 73)
	
	  center("and all the fans at", 12, 87)
	  center("the pinback morning show", rnd(16), 94)
	  center("https://twitch.tv/pinback99", 12, 101)
	  pagetime -= 1
	 end
 end

 if (splashpage == 6) then
  if (pagetime == 0) then
   splashpage = flr(rnd(100))==0 and 7 or 2
   pagetime = titlewait
  else
	  center("https://covid19.who.int", 14)
	  fakecovid(64, 54)
	  pagetime -= 1
	 end
 end

 if (splashpage == 7) then
  if (pagetime == 0) then
   splashpage = 2
   pagetime = titlewait
  else
   top=43
	  center("'when everything that can be", 13, top)
	  center("let go of is let go of,", 13, top+7)
	  center("what remains is what we", 13, top+14)
	  center("desire above all else.'", 13, top+21)
	  center("rupert spira", 3, top+35)
	  pagetime -= 1
	 end
 end
 
end

function fancyprint(text, y, clr)
 width = (#text * 10) + (#text - 1)
 startx = (58 - (width/2))
 for i=1,#text do
  x = startx + ((i-1) * 5) + (i*7)
  bigletter(sub(text,i,i), x, y, clr)
 end
end

function bigletter(char, x, y, clr)
 l = bigletters[char]
 for i=1,#l do
  line(x+l[i][1],y+l[i][2],x+l[i][3],y+l[i][4], clr)
 end
end

function center(text, clr, y)
 if (not y) y = 62
 x=64 - ((#text * 3) + (#text - 1)) / 2
 print(text, x, y, clr)
end

bigletters = {
 p = {
  {-5,-5,-5,5},
  {-5,-5,3,-5},
  {3,-5,5, -3},
  {5, -3, 5, 0},
  {5, 0, -5, 0}
 },
 r = {
  {-5,-5,-5,5},
  {-5,-5,3,-5},
  {3,-5,5, -3},
  {5, -3, 5, 0},
  {5, 0, -5, 0},
  {3,0,5,5}
 },
 i = {
  {-5,-5,5,-5},
  {0, -5, 0, 5},
  {-5, 5, 5, 5}
 },
 n = {
  {-5,-5,-5,5},
  {5,-5,5,5},
  {-5,-5,5,5}
 },
 e = {
  {-5,-5,-5,5},
  {-5,-5,5,-5},
  {-5,0,5,0},
  {-5,5,5,5}
 },
 o = {
  {-3, -5, 3, -5},
  {3,-5,5, -3},
  {-5, -3, -5, 3},
  {-3, 5, 3, 5},
  {-3, -5, -5, -3},
  {5, -3, 5, 3},
  {5, 3, 3, 5},
  {-5, 3, -3, 5}
  
 },
 d = {
  {-5, -5, 3, -5},
  {3, -5, 5, -3},
  {-5, -5, -5, 5},
  {-5, 5, 3, 5},
  {5, -3, 5, 3},
  {5,3,3,5}
 },
 s = {
  {5,-5, -3, -5},
  {-3,-5,-5,-3},
  {-5,-3,-5,-2},
  {-5,-2,-3, 0},
  {-3, 0, 3, 0},
  {3, 0, 5, 2},
  {5, 2, 5, 3},
  {5, 3, 3, 5},
  {3, 5, -5, 5}
 }
}

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
11111116111666661111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111161111111116111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111611111111116111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111611111111111611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11116111111111111611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11161111111111111611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11161111111111111161111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11611111111111111161111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11161111111111111161111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11116111111111111116111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111611111111111166111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111611111111166611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111161111111611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111116111116111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111611161111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111161611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111116111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111111111111111e111111111111111111111111111111111111111111111111111
1111111111bbb11bb1b111bbb111111bb11bb1b1b1bb11bbb1bbb1b1b111111bb1bbb1bbb1bbbe1bb11111bbb1bbb1bbb11bb1bbb1bb11bbb11bb11111111111
11111111111b11b1b1b1111b111111b111b1b1b1b1b1b11b11b1b1b1b11111b111b1b1bbbeb111be111111b1b1b1b1b111b111b111b1b11b11b1111111111111
11111111111b11b1b1b1111b111111b111b1b1b1b1b1b11b11bb11bbb11111b111bbb1b1b1bb11bbb11111bbb1bb11bb11bbb6bb11b1b11b11bbb11111111111
11111111111b11b1b1b1111b111111b111b1b1b1b1b1b11b11b1b111b11111b1b1b1b1b1b1b11111b11111b111b1b1b11116b1b666b6b66b1111b11111111111
1111111111bb11bb11bbb11b1111111bb1bb111bb1b1b11b11b1b1bbb11111bbb1b1b1b1bebbb1bb1e1111b111b1b1bbb1bb11bbb1b1b11b11bb111111111111
111111111111111111111111111111111111111111111111111111111111111111111111e11111111e1111111111111111611111111111161111111111111111
111111111111111111111111111111111111111111111111111111111111111111111111e11111111e1111111111111111611111111111116111111111111111
1111111111111111111111111111111111111111111111111111111111111111111111111e11111ee11111111111111116111111111111116111111111111111
1111111111111111111111111111111111111111111111111111111111111111111111111eeeeee1111111111111111116111111111111116111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111116111111111111116111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111161111111111111116111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111161111111111111161111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111116111111111111161111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111611111111111161111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111161111111111161111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111161111111116661111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111116116666661111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111116661111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111181111111111111111111111111111111111111111111111111111111
11111111111111111111888111118881888188118881888118818181111118818881888888888111888188811881188188818881888111111111111111111111
11111111111111111111818111118181181181818181818181118181111181118181888181111811818181818181811181818181888111111111111111111111
11111111111111111111888111118881181181818811888181118811111181118881888188111811888188118181811188118881818111111111111111111111
11111111111111111111818111118111181181818181818181118181111181818181888181111811811181818181818181818181818111111111111111111111
11111111111111111111818111118111888181818881818118818181111188818181888188811811811181818811888181818181818111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111181111111811111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111181111111811111111111111111111111111111111111111111111111661
11111111111111111111111111111111111111111111111111111111111111111111181118888811111111111111111111111111111111111111111111111616
11111111111111111111111111111111111111111111111111111111111111111111118181111111111111111111111111111111111111111111111111116111
11111111111111111111111111111111111111111111111111111111111111111111111811111111111111111111111111111111111111111111111111161111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111611111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111116111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111116111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111116166111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111116611611
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111616
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111161
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111111111111111111ddddd11111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111111111111111111d1111dd111111111111111111111111111111111111111111
111111111111111111111111111111111111111111111111111111111111111111111111111111d1111111ddd111111111111111111111111111111111111111
111111111111111111111111111111111111111111111111111111111111111111111111111111d1111111111dd1111111111111111111111111111111111111
111113333333331113333333333313111111111313111111111313333333333313333333331111d3333333111333333333331333333333111113333333331111
111113111111113111111131111113311111111313311111111313111111111113111111113111311111113191d1913111111311111111311131111111111111
111113111111111311111131111113131111111313131111111313111111111113111111111313111111111391d1913111111311111111131311111111111111
111113111111111311111131111113113111111313113111111313111111111113111111111313111111111391d9113111111311111111131311111111111111
f111131111111113111111311111131113111113131113111113131111111111131111111113d3111111111319d9113111111311111111131131111111111111
1fff13333333333311111131111113111131111313111131111313333333333313333333333313111111111311d1113111111311111111131113333333111111
111f131111111111111111311111131111131113131111131113131111111111131111111311d3111111111311d1113111111311111111131111111111311111
111f13111111111111111131111113111111311313111111311313111111111113111111113113111111111311d1113111111311111111131111111111131111
ffff13111111111111111131111113111111131313111111131313111111111113111111113113111111111311d1113111111311111111131111111111131111
111113111111111111111131111113111111113313111111113313111111111113111111111311311111113111d1113111111311111111311111111111311111
11111311111111111333333333331311111111131311111111131333333333331311111111131113333333ddd333333333331333333333111333333333111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111dd11dd111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111111111111111111111dd11111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111bb1111111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111111111111111111b11bb11111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111bb11111bb111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111111111111111b111111111bb1111111111111111111111111111111111111111
111111111111111111111111111111111111111111111111111111111111111111111111111b111111111111bb11111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111b11111111111111b11111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111b11111111111111b11111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111111111111b111111111111111b11111111111111111111111111111111111a11
1111111111111111111111111111111111111111111111111111111111111111111111111b1111111111111111b11111111111111111111111111111111aa1aa
111111111111111111111111111111111111111111111111111111111111111111111111b11111111111111111b1111111111111111111111111111111aa1111
1111111111111111111111111111111111111111111111111111111111111111111111111b1111111111111bbbb111111111111111111111111111111a1a1111
11111111111111111111111111111111111111111111111111111111111111111111111111b11111111111b111111111111111111111111111111111a1111111
111111111111111111111111111111111111111111111111111111111111111111111111111b111111111b111111111111111111111111111111111a11111111
111111111111111111111111111111111111111111111111111111111111111111111111111b1111111111b111111111111111111111111111111111a1111111
1111111111111111111111111111111111111111111111111111111111111111111111111111b111111111b1111111111111111111111111111111111a111111
11111111111111111111111111111111111111111111111111111111111111111111111111111b11111111bb1111111111111111111111111111111111a11111
111111111111111111111111111111111111111111111111111111111111111111111111111111bb111bbb1111111111111111111111111111111111111aa11a
11111111111111111111111111111111111111111111111111111111111111111111111111111111bbb111111111111111111111111111111111111111111aa1
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111ddddd1111d1d1d11111ddd11dd111111dd1ddd1ddd1ddd1ddd1111111111111111111115551111155515551
1111111111111111111111111111111111111111dd1d1dd11d11d1d111111d11d1d11111d1111d11d1d1d1d11d11111111111111111111115151111151515111
1111111111111111111111111111111111111111ddd1ddd11d111d1111111d11d1d11111ddd11d11ddd1dd111d11111111111111111111115151111155515551
1111111111111111111111111111111111111111dd1d1dd11d11d1d111111d11d1d1111111d11d11d1d1d1d11d11111111111111111111115151111111511151
11111111111111111111111111111111111111111ddddd11d111d1d111111d11dd111111dd111d11d1d1d1d11d11111111111111111111115551151111515551
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111

__sfx__
000100000063000630006300063000630006300063000630006302e6002e6002e6002e60000000000000000000000000000000000000000000000000000000000000000000000003e70000000000000000000000
00020000207501e7501b750187501675012750107500c7500a7500875006750047500375009700077000770006700067000670000000000000000000000000000000000000000000000000000000000000000000
00070000246202362022620206201f6201e6201d6201c6201a6201862017620156201462012620116200f6200e6200d6200b6200a620096200862007620056200462004620036200162000620006200062000620
000900003a0503a0003a050000003a050000003a050000003a050000003a050000003a05000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00050000297502575023750217501e7501d7501a75019750167501475012750107500e7500c7500a7500975007750057500475003750027500175001750007500370004700047000470004700047000470003700
000a00000035000000000000000000000000000000000000000000000001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000a00000135000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000400000c0500c0500c0500d0500f050140501705020050270502d050290502605025050290502c050280502605025050290502b0502500026000290002e0002f00016000071001800006100051001a00004100
00040000261503115025150271502d1502a1501e1502115028150261502215029150241502e15021150241502c15023150241502c1502e150291502915028150291502c15022150251502d150291502115021150
00020020205301d5301b5301a5301a5301a5301a5301b5301d5301f530205302153022530225302253022530215301f5301e5501d5501b5501a5501a5501a5501b5501c5501e5501f55020550215502155020550
000200001b4501a45019450164501545013450114500f4500d4500a45008450064500445002450004500000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000800000c0500a050090500805007050060500505004050020500105005000040000300001000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
02 09494344

